import Result from './result.js';
import Maybe from './maybe.js';
export declare function transposeResult<T, E>(result: Result<Maybe<T>, E>): Maybe<Result<T, E>>;
export declare function toMaybe<T>(result: Result<T, unknown>): Maybe<T>;
export declare function fromMaybe<T, E>(errValue: E, maybe: Maybe<T>): Result<T, E>;
export declare function fromMaybe<T, E>(errValue: E): (maybe: Maybe<T>) => Result<T, E>;
export declare function transposeMaybe<T, E>(maybe: Maybe<Result<T, E>>): Result<Maybe<T>, E>;
export declare function toOkOrErr<T, E>(error: E, maybe: Maybe<T>): Result<T, E>;
export declare function toOkOrErr<T, E>(error: E): (maybe: Maybe<T>) => Result<T, E>;
export declare function toOkOrElseErr<T, E>(elseFn: () => E, maybe: Maybe<T>): Result<T, E>;
export declare function toOkOrElseErr<T, E>(elseFn: () => E): (maybe: Maybe<T>) => Result<T, E>;
export declare function fromResult<T>(result: Result<T, unknown>): Maybe<T>;
//# sourceMappingURL=toolbelt.d.ts.map